pipeline {
    agent any
    tools {
       
        maven "mvn"
    }
 

    stages {

       
        stage("Build the code"){
            steps{
                sh "ls -a"
                sh "whoami"
                sh "mvn clean package"
            }

        }
        stage("Deploying on tomcat server"){
            steps{
                sh "ls -a"
                sh "cp target/Assignment.war /usr/local/tomcat/webapps"

            }

        }
        


        stage("SonarQube Analysis")
        {
            steps
            {
                withSonarQubeEnv("sonar")
                {
                    sh 'mvn -f pom.xml clean verify sonar:sonar -Dsonar.projectKey=Pipeline-jenkins -Dsonar.projectName=Mini-assignment'
                }
            }
        }

        stage("Upload artifacts")
        {
            steps
            {
                rtUpload(
                    serverId: 'artifactory',
                    spec:'''{
                        "files":[
                        {
                            "pattern": "*.war",
                            "target": "artifactory-server/"
                        }
                    ]
                    }''',
                    )
                    rtPublishBuildInfo( serverId:"artifactory" )

            }
        }

}
post{
            always{
                mail to: "mohd.arslan@nagarro.com", 
                subject: "Test Email",
                body: "Hiii, Here is your pipeline status: ${currentBuild.result}"
                }
            }}
